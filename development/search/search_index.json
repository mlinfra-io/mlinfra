{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#what-is-mlinfra","title":"What is mlinfra?","text":"<p><code>mlinfra</code> is a python package designed to streamline the deployment of various MLOps tools within a MLOps stack, quickly and with best practices. The core philosophy behind <code>mlinfra</code> is to simplify and expedite the deployment of MLOps infrastructure. This approach enables ML Engineers or ML Platform engineers to concentrate on delivering business value, by significantly reducing the time and resources typically required for deploying MLOps tools on the cloud.</p>"},{"location":"#why-mlinfra","title":"Why mlinfra?","text":"<p><code>mlinfra</code> was conceived from a personal challenge I faced while deploying various MLOps tools in cloud environments. The absence of a standardized method for deploying MLOps tools and infrastructure on the cloud was not only noticeable but also a source of frustration. As my discussions with industry peers expanded, it became evident that knowledge regarding the deployment of ML Infrastructure is fragmented across various tool-specific documentation sources. This fragmentation hinders rapid and best practice-compliant deployment of diverse MLOps tools within a stack, posing challenges for platform teams who aim to:</p> <ul> <li>Experiment with different tools in MLOps stacks to customize solutions according to their specific needs.</li> <li>Swiftly evaluate new tools without delving into extensive deployment documentation.</li> <li>Deploy tools within the MLOps stack efficiently and in accordance with best practices, thereby circumventing the need for prolonged development cycles and complex planning.</li> </ul> <p>The fundamental concept behind <code>mlinfra</code> is to establish a universal Infrastructure as Code (IaC) framework that expedites the creation and deployment of MLOps stacks. This package empowers MLOps Engineers and Platform Engineers to deploy a variety of MLOps tools across different stages of the machine learning lifecycle. The essence of <code>mlinfra</code> lies in its Python layer, which interprets the deployment configuration and utilizes Terraform modules to deploy these tools. It further enhances the process by dynamically generating a suite of inputs, roles, and permissions, thereby simplifying and streamlining the deployment process.</p>"},{"location":"#how-does-it-work","title":"How does it work?","text":"<p><code>mlinfra</code> deploys infrastructure using a declarative approach. The minimal spec for aws cloud as infra with custom applications deployed is as follows:</p> <p>The following is just a sample configuration.</p> <p>The following sample yaml serves as a reference for the configuration of a MLOps stack which can be deployed using <code>mlinfra</code>. Some of the stacks and their toolings are currently under active development and may not be available to use right away.</p> <pre><code>name: aws-mlops-stack\nprovider:\n  name: aws\n  account-id: xxxxxxxxx\ndeployment:\n  type: kubernetes\nstack:\n  data_versioning:\n    - lakefs # can also be pachyderm or neptune and so on\n  experiment_tracker:\n    - mlflow # can be weights and biases or determined, or neptune or clearml and so on...\n  orchestrator:\n    - zenml # can also be argo, or luigi, or aws-batch or airflow, or dagster, or prefect  or kubeflow or flyte\n  artifact_tracker:\n    - mlflow # can also be neptune or clearml or lakefs or pachyderm or determined or wandb and so on...\n  model_registry:\n    - bentoml # can also be  mlflow or neptune or determined and so on...\n  model_serving:\n    - nvidia_triton # can also be bentoml or fastapi or cog or ray or seldoncore or tf serving\n  monitoring:\n    - nannyML # can be grafana or alibi or evidently or neptune or mlflow or prometheus or weaveworks and so on...\n  alerting:\n    - mlflow # can be mlflow or neptune or determined or weaveworks or prometheus or grafana and so on...\n</code></pre> <p>The above configuration can be simply deployed using the following command:</p> <pre><code>mlinfra terraform --action=apply --stack-config-path=aws-mlops-stack.yaml\n</code></pre> <p>For more details, refer to the User Guide section.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to mlinfra","text":"<p>Thank you for your interest in contributing to this project! I really appreciate that you took your time and interest in contributing <code>mlinfra</code>. I'd love to hear from your experience and opinions. Drop me a line in the discord channel.</p> <p>We appreciate issue reports, pull requests for code and documentation, as well as any project-related communication through discussions.</p>"},{"location":"CONTRIBUTING/#getting-started","title":"Getting Started","text":"<ul> <li> <p>To get started, first pat yourself!</p> </li> <li> <p><code>mlinfra</code> is organised as follows:</p> <ul> <li>Docs are in <code>docs</code> folder and are built using mkdocs-material</li> <li>Python code can be located in <code>src/mlinfra</code> repo</li> <li>All terraform modules can be found in <code>src/mlinfra/modules</code> folder.</li> </ul> </li> <li> <p>Fork the <code>mlinfra</code> repo and clone it to your local machine.</p> </li> <li>Create a python virtual environment and install the dependencies: <pre><code>python -m venv venv\nsource venv/bin/activate\npip install -e .\n</code></pre></li> <li>To update the docs, you'd need to first install the docs dependencies: <pre><code>pip install -r requirements-docs.txt\n</code></pre></li> <li>go to <code>mlinfra</code> root and run <code>mkdocs serve</code> to view the docs locally.</li> </ul>"},{"location":"CONTRIBUTING/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"CONTRIBUTING/#report-bug","title":"Report Bug","text":"<ul> <li>The best way to report a bug is to file an issue on GitHub. Please make sure there is an open issue discussing your contribution.</li> <li>Before opening a new issue, please check for existing issues. If you find an existing issue that matches closely with yours, please thumbs-up or comment on it, so we know that the issue is relevant to many people. For any new issue please include:<ul> <li>Your operating system name and version.</li> <li>Opta version.</li> <li>Detailed steps to reproduce the bug.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>When posting Python stack traces, please quote them using Markdown blocks.</li> </ul> </li> </ul>"},{"location":"CONTRIBUTING/#submitting-ideas-or-feature-requests","title":"Submitting Ideas or Feature Requests","text":"<p>The best way is to file an issue on GitHub:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> </ul>"},{"location":"CONTRIBUTING/#improve-documentation","title":"Improve Documentation","text":"<p><code>mlinfra</code> could always use better documentation, so feel free to create an issue and discuss your changes.</p>"},{"location":"CONTRIBUTING/#bugfix-resolution-time-expectations","title":"Bugfix resolution time expectations","text":"<ul> <li>We will respond to all new issues as soon as possible</li> <li>For any serious (production breaking) bug we will try to resolve ASAP and do a hotfix release</li> </ul>"},{"location":"CONTRIBUTING/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>A philosophy we would like to strongly encourage is</p> <p>Before creating a PR, create an issue.</p> <p>The purpose is to separate problem from possible solutions.</p> <p>Bug fixes: If you\u2019re only fixing a small bug, it\u2019s fine to submit a pull request right away but we highly recommend to file an issue detailing what you\u2019re fixing and its impact. This is helpful in case we don\u2019t accept that specific fix owing to the roadmap but want to keep track of the issue. Please keep in mind that the project maintainers reserve the rights to accept or reject incoming PRs, so it is better to separate the issue and the code to fix it from each other. In some cases, project maintainers may request you to create a separate issue from PR before proceeding.</p> <p>Feature/Large changes: If you intend to change the public API, or make any non-trivial changes to the implementation, we require you to file a new issue and document your thoughts as much as possible. This lets us reach an agreement on your proposal before you put significant effort into it. You are welcome to submit a PR along with the issue (sometimes necessary for demonstration), but we will not review/merge the code until there is an agreement on the issue.</p> <p>In general, small PRs are always easier to review than large PRs. The best practice is to break your work into smaller independent PRs and refer to the same issue. This will greatly reduce turnaround time.</p> <p>If you wish to share your work which is not ready to merge yet, create a Draft PR. This will enable maintainers and the CI runner to prioritize mature PR's.</p> <p>Finally, please never submit a PR that will put the main branch in broken state. If the PR is part of multiple PRs to complete a large feature and cannot work on its own, you can create a feature branch and merge all related PRs into the feature branch before creating a PR from feature branch to main.</p>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the mlinfra Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior via <code>ali.abbasjaffri [at] live dot com</code>.</p>"},{"location":"RELEASE_NOTES/","title":"Release Notes","text":""},{"location":"RELEASE_NOTES/#2025-01-28-version-0028","title":"2025-01-28 - version 0.0.28","text":""},{"location":"RELEASE_NOTES/#whats-changed","title":"What's Changed","text":"<ul> <li>Removed hyperlint by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/179</li> <li>mlflow update by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/180</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-12-27-version-0027","title":"2024-12-27 - version 0.0.27","text":"<ul> <li>minor-fixes by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/178</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-12-27-version-0026","title":"2024-12-27 - version 0.0.26","text":"<ul> <li>update-readme by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/176</li> <li>updated python version and dependencies by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/177</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-12-26-version-0025","title":"2024-12-26 - version 0.0.25","text":"<ul> <li>173-feature-setup-uv-lock by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/174</li> <li>Changed terraform s3 backend from dynamodb to s3 lockfile by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/175</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-11-04-version-0024","title":"2024-11-04 - version 0.0.24","text":"<ul> <li>fix: updated-cli-for-utils by @aliabbasjaffri in #157</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-11-03-version-0023","title":"2024-11-03 - version 0.0.23","text":"<ul> <li>fix: update-release-notes-gh-action by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/156</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-11-03-version-0022","title":"2024-11-03 - version 0.0.22","text":"<ul> <li>fix: update-release-notes-formatting by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/154</li> <li>dependabot: bump mkdocs-material from 9.5.27 to 9.5.43 by @dependabot in https://github.com/mlinfra-io/mlinfra/pull/148</li> <li>dependabot: bump mkdocs from 1.6.0 to 1.6.1 by @dependabot in https://github.com/mlinfra-io/mlinfra/pull/136</li> <li>dependabot: bump virtualenv from 20.26.2 to 20.27.1 by @dependabot in https://github.com/mlinfra-io/mlinfra/pull/147</li> <li>dependabot: bump babel from 2.15.0 to 2.16.0 by @dependabot in https://github.com/mlinfra-io/mlinfra/pull/138</li> <li>dependabot: bump pytz from 2024.1 to 2024.2 by @dependabot in https://github.com/mlinfra-io/mlinfra/pull/135</li> <li>chore: bumped-dev-dependencies by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/155</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-11-03-version-0021","title":"2024-11-03 - version 0.0.21","text":"<ul> <li>fix: broken-release-for pypa1.11 by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/153</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-11-02-version-0020","title":"2024-11-02 - version 0.0.20","text":"<ul> <li>fix: Set attestation as false in pypi release by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/152</li> <li>[Snyk] Security upgrade zipp from 3.15.0 to 3.19.1 by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/151</li> </ul> <p>Full Changelog</p>"},{"location":"RELEASE_NOTES/#2024-11-02-version-0019","title":"2024-11-02 - version 0.0.19","text":"<ul> <li>99 replace cli to typer by @aliabbasjaffri in https://github.com/mlinfra-io/mlinfra/pull/149</li> <li>Fixing docs publishing</li> </ul> <p>Full Changelog</p>"},{"location":"SECURITY/","title":"Security Policy","text":""},{"location":"SECURITY/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you find some security vulnerability, please immediately inform at <code>ali dot abbasjaffri [at] live dot com</code> and i will get back to you as soon as possible.</p> <p>Please refrain from reporting the vulnerability publically. In order for us to best respond to your report, please include any of the following:</p> <ul> <li>Steps to reproduce or proof-of-concept</li> <li>Any relevant tools, including versions used</li> </ul>"},{"location":"SECURITY/#response-to-security-vulnerabilities","title":"Response to Security Vulnerabilities","text":"<p>Upon receiving a security vulnerability report, our team will:</p> <ul> <li>Investigate the issue and work towards a timely resolution.</li> <li>Keep you informed about the progress of fixing the issue.</li> <li>Publicly acknowledge your contribution in the project's release notes, unless you prefer to remain anonymous.</li> </ul>"},{"location":"SECURITY/#security-updates-and-patching","title":"Security Updates and Patching","text":"<ul> <li><code>mlinfra</code> is currently under active development and the team would be releasing a new version every 2-3 weeks. We always recommend users to move to a newer version when it became available, and we only provide security updates in the latest version.</li> <li>We release patches for security vulnerabilities as soon as a fix is available and our users are encouraged to regularly update to the latest version of the software.</li> </ul>"},{"location":"about_me/","title":"About Me","text":"<p>I'm Ali Abbas Jaffri and i've been working in the space of MLOps since the fall of 2019. It started off during the course of my Master's thesis at the Technical University of Munich but soon grew into a passion. I've been working ever since on the deployment of ML infrastructure.</p> <p>I started this project in the midst of 2023 after having deliberated on the issue of quick deployment of ML infrastructure. <code>mlinfra</code> emerged from my personal need to address these challenges. As I shared my experiences with fellow platform enthusiasts, I realized I was not alone in this journey.</p> <p>I compiled my insights on deploying various MLOps stacks in different environments into this tool, aspiring to simplify the deployment process across all cloud providers and platform tools. This is an ongoing effort and i really wish to cover more cloud providers and MLOps toolings in the near future. I genuinely hope you find <code>mlinfra</code> as useful and transformative as I envisioned and hope you enjoy using it!</p>"},{"location":"acknowledgements/","title":"Acknowledgements","text":""},{"location":"acknowledgements/#tools","title":"Tools","text":"<ul> <li>This project is inspired by opta, a tool quite ahead of its time, and got discontinued way before its time. I would like to thank the team behind it for their work and providing me inspiration to condense the idea of deployment of MLOps tools into a single tool.</li> <li>The project leans heavily on terraform aws modules by Anton Babenko for the AWS infrastructure.</li> </ul>"},{"location":"acknowledgements/#resources","title":"Resources","text":"<ul> <li>Road Rage font</li> <li>Dall-E for the wonderful background</li> <li>AWS EKS Best Practices Guide</li> </ul>"},{"location":"acknowledgements/#people","title":"People","text":"<p>I would also like to thank the following individuals:</p> <ul> <li>Ghania Riaz for her patience in bearing me with a laptop on weekdays, holidays and our vacations!</li> <li>Nicholas Junge for his valuable feedback and support in the early stages of this project.</li> <li>Hamza Tahir: an old friend and an endless source of inspiration on my journey in the MLOps space.</li> </ul>"},{"location":"roadmap/","title":"Roadmap","text":"<p><code>mlinfra</code> comes with the promise of deployment of MLOps stacks across all popular and available cloud providers. For each cloud provider, <code>mlinfra</code> aims to cover the following deployments (if ofcourse the deployment type is supported by the cloud provider):</p> <ul> <li>Infrastructure-as-a-Service ( IaaS )</li> <li>Platform-as-a-Service ( PaaS )</li> </ul>"},{"location":"roadmap/#deployment-environments","title":"Deployment Environments","text":"<p>As already mentioned, <code>mlinfra</code> is currently under active development. There is a two way relationship between cloud and mlops tools with deployments which can be depicted via: MLOps-Tools  Deployment Type  Cloud Providers</p> <p>We use the following statuses to denote the availability of deployments across Cloud providers and MLOps toolings.</p> Status Meaning No deployment type is available yet IaaS deployment is available PaaS deployment is available Both, IaaS and PaaS deployments are available"},{"location":"roadmap/#cloud-platforms","title":"Cloud Platforms","text":"Cloud Deployment Type Available AWS GCP Azure Digital Ocean Cloud IBM Cloud Alibaba Cloud Oracle Cloud Hetzner Cloud"},{"location":"roadmap/#local","title":"Local","text":"<p>Local deployment is only possible on local k8s platforms</p> Local Deployment Type Available K3S kind"},{"location":"roadmap/#mlops-stacks","title":"MLOps Stacks","text":""},{"location":"roadmap/#data-versioning","title":"Data Versioning","text":"CloudLocal Tool AWS GCP Azure Digital Ocean Cloud IBM Cloud Alibaba Cloud Oracle Cloud Hetzner Cloud lakefs Tool k3s kind lakefs <p>The details on the rest of the roadmap would be shared soon!g</p>"},{"location":"code/aws/cloud_vm/","title":"cloud_vm","text":"<p><code>cloud_vm</code> deploys MLOps <code>stack</code> on top of Cloud provider VMs.</p>"},{"location":"code/aws/cloud_vm/#complete-example-with-all-stacks","title":"Complete example with all stacks","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-mlops-stack-complete\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\nstack:\n  - data_versioning:\n      name: lakefs\n  - experiment_tracking:\n      name: mlflow\n  - orchestrator:\n      name: prefect\n</code></pre> <pre><code>name: aws-mlops-stack-complete-advanced\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\n  config:\n    vpc:\n      create_database_subnets: true\nstack:\n  - data_versioning:\n      name: lakefs\n      params:\n        remote_tracking: true\n        database_type: \"dynamodb\"\n        lakefs_data_bucket_name: \"lakefs-repository-data-bucket\"\n        dynamodb_table_name: \"lakefs_kvstore\"\n  - experiment_tracking:\n      name: mlflow\n      params:\n        remote_tracking: true\n        mlflow_artifacts_bucket_name: \"artifacts-storage-bucket\"\n  - orchestrator:\n      name: prefect\n      params:\n        remote_tracking: true\n        ec2_application_port: 9500\n</code></pre>"},{"location":"code/aws/cloud_vm/#data_versioning","title":"data_versioning","text":""},{"location":"code/aws/cloud_vm/#lakefs","title":"lakefs","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-mlops-stack-lakefs\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\nstack:\n  - data_versioning:\n      name: lakefs\n</code></pre> <pre><code>name: aws-mlops-stack-lakefs\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\n  config:\n    vpc:\n      create_database_subnets: true\nstack:\n  - data_versioning:\n      name: lakefs\n      params:\n        remote_tracking: true\n        database_type: \"dynamodb\"\n        lakefs_data_bucket_name: \"lakefs-repository-data-bucket\"\n        dynamodb_table_name: \"lakefs_kvstore\"\n</code></pre>"},{"location":"code/aws/cloud_vm/#experiment_tracking","title":"experiment_tracking","text":""},{"location":"code/aws/cloud_vm/#mlflow","title":"mlflow","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-mlops-stack-mlflow\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\nstack:\n  - experiment_tracking:\n      name: mlflow\n</code></pre> <pre><code>name: aws-mlops-stack-mlflow\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\n  config:\n    vpc:\n      create_database_subnets: true\nstack:\n  - experiment_tracking:\n      name: mlflow\n      params:\n        remote_tracking: true\n        mlflow_artifacts_bucket_name: \"mlflow-bucket\"\n</code></pre>"},{"location":"code/aws/cloud_vm/#wandb","title":"wandb","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-mlops-stack-mlflow\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\nstack:\n  - experiment_tracking:\n      name: wandb\n</code></pre> <pre><code>name: aws-mlops-stack-wandb\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\n  config:\n    vpc:\n      create_database_subnets: true\nstack:\n  - experiment_tracking:\n      name: wandb\n      params:\n        remote_tracking: true\n        wandb_artifacts_bucket_name: \"wandb-artifacts-bucket\"\n        ec2_application_port: 8000\n</code></pre>"},{"location":"code/aws/cloud_vm/#orchestrator","title":"orchestrator","text":""},{"location":"code/aws/cloud_vm/#prefect","title":"prefect","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-mlops-stack-prefect\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\nstack:\n  - orchestrator:\n      name: prefect\n</code></pre> <pre><code>name: aws-mlops-stack-prefect\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\n  config:\n    vpc:\n      create_database_subnets: true\nstack:\n  - orchestrator:\n      name: prefect\n      params:\n        remote_tracking: true\n        ec2_application_port: 9500\n</code></pre>"},{"location":"code/aws/cloud_vm/#dagster","title":"dagster","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-mlops-stack-dagster\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\nstack:\n  - orchestrator:\n      name: dagster\n</code></pre> <pre><code>name: aws-mlops-stack-dagster\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\n  config:\n    vpc:\n      create_database_subnets: true\nstack:\n  - orchestrator:\n      name: dagster\n      params:\n        remote_tracking: true\n        database_type: \"postgres\"\n        ec2_application_port: 3500\n        app_versions:\n          dagit: \"1.3.13\"\n          dagster: \"1.3.13\"\n</code></pre>"},{"location":"code/aws/kubernetes/","title":"kubernetes","text":"<p><code>kubernetes</code> deploys MLOps <code>stack</code> on top of Cloud provider's kubernetes. In case of AWS, its EKS.</p>"},{"location":"code/aws/kubernetes/#complete","title":"Complete","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-complete-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\nstack:\n  - data_versioning:\n      name: lakefs\n  - experiment_tracking:\n      name: mlflow\n  - orchestrator:\n      name: prefect\n</code></pre> <pre><code>name: aws-complete-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\n  config:\n    vpc:\n      create_database_subnets: true\n      enable_nat_gateway: true\n      one_nat_gateway_per_az: false\n    kubernetes:\n      k8s_version: \"1.30\"\n      cluster_endpoint_public_access: true\n      spot_instance: false\n      tags:\n        data_versioning: \"lakefs\"\n    node_groups:\n      - name: k8s-node-group\n        instance_types:\n          - t3.medium\n        desired_size: 1\n        min_size: 1\n        max_size: 3\n        disk_size: 20\nstack:\n  - data_versioning:\n      name: lakefs\n      params:\n        remote_tracking: true\n        database_type: \"postgres\"\n        tags:\n          database_type: \"postgres\"\n          data_versioning: \"lakefs\"\n          remote_tracking: true\n  - experiment_tracking:\n      name: mlflow\n      params:\n        remote_tracking: true\n        mlflow_data_bucket_name: \"mlflow-bucket\"\n        tags:\n          database_type: \"postgres\"\n          experiment_tracking: \"mlflow\"\n          remote_tracking: true\n  - orchestrator:\n      name: prefect\n      params:\n        remote_tracking: true\n        tags:\n          database_type: \"postgres\"\n          orchestrator: \"prefect\"\n          remote_tracking: true\n</code></pre>"},{"location":"code/aws/kubernetes/#lakefs","title":"lakefs","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-lakefs-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\nstack:\n  - data_versioning:\n      name: lakefs\n</code></pre> <pre><code>name: aws-lakefs-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\n  config:\n    vpc:\n      create_database_subnets: true\n      enable_nat_gateway: true\n      one_nat_gateway_per_az: false\n    kubernetes:\n      k8s_version: \"1.30\"\n      cluster_endpoint_public_access: true\n      spot_instance: false\n      tags:\n        data_versioning: \"lakefs\"\n    node_groups:\n      - name: lakefs-node-group\n        instance_types:\n          - t3.medium\n        desired_size: 1\n        min_size: 1\n        max_size: 3\n        disk_size: 20\nstack:\n  - data_versioning:\n      name: lakefs\n      params:\n        remote_tracking: true\n        database_type: \"postgres\"\n        tags:\n          database_type: \"postgres\"\n          data_versioning: \"lakefs\"\n          remote_tracking: true\n</code></pre>"},{"location":"code/aws/kubernetes/#mlflow","title":"mlflow","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-mlflow-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\nstack:\n  - experiment_tracking:\n      name: mlflow\n</code></pre> <pre><code>name: aws-mlflow-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\n  config:\n    vpc:\n      create_database_subnets: true\n      enable_nat_gateway: true\n      one_nat_gateway_per_az: false\n    kubernetes:\n      k8s_version: \"1.30\"\n      cluster_endpoint_public_access: true\n      spot_instance: false\n      tags:\n        experiment_tracking: \"mlflow\"\n    node_groups:\n      - name: mlflow-node-group\n        instance_types:\n          - t3.medium\n        desired_size: 1\n        min_size: 1\n        max_size: 3\n        disk_size: 20\nstack:\n  - experiment_tracking:\n      name: mlflow\n      params:\n        remote_tracking: true\n        mlflow_data_bucket_name: \"mlflow-bucket\"\n        tags:\n          database_type: \"postgres\"\n          experiment_tracking: \"mlflow\"\n          remote_tracking: true\n</code></pre>"},{"location":"code/aws/kubernetes/#prefect-server-worker","title":"Prefect (Server &amp; Worker)","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: aws-prefect-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\nstack:\n  - orchestrator:\n      name: prefect\n</code></pre> <pre><code>name: aws-prefect-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\n  config:\n    vpc:\n      create_database_subnets: true\n      enable_nat_gateway: true\n      one_nat_gateway_per_az: false\n    kubernetes:\n      k8s_version: \"1.30\"\n      cluster_endpoint_public_access: true\n      spot_instance: false\n      tags:\n        orchestrator: \"prefect\"\n    node_groups:\n      - name: prefect-node-group\n        instance_types:\n          - t3.medium\n        desired_size: 1\n        min_size: 1\n        max_size: 3\n        disk_size: 20\nstack:\n  - orchestrator:\n      name: prefect\n      params:\n        remote_tracking: true\n        tags:\n          database_type: \"postgres\"\n          orchestrator: \"prefect\"\n          remote_tracking: true\n</code></pre>"},{"location":"code/local/kind/","title":"kind","text":"<p><code>kind</code> deploys MLOps <code>stack</code> on top of kind cluster on your machine. Please ensure that docker is installed and running on your machine, along with the latest version of kind.</p>"},{"location":"code/local/kind/#complete","title":"Complete","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: local-kind-k8s\nprovider:\n  name: local\ndeployment:\n  type: kind\nstack:\n  - data_versioning:\n      name: lakefs\n  - experiment_tracking:\n      name: mlflow\n  - orchestrator:\n      name: prefect\n  - vector_database:\n      name: milvus\n</code></pre> <pre><code>name: local-kind-k8s-complete\nprovider:\n  name: local\ndeployment:\n  type: kind\n  config:\n    kubernetes:\n      k8s_version: \"1.30\"\nstack:\n  - data_versioning:\n      name: lakefs\n  - experiment_tracking:\n      name: mlflow\n  - orchestrator:\n      name: prefect\n  - vector_database:\n      name: milvus\n</code></pre>"},{"location":"code/local/minikube/","title":"minikube","text":"<p><code>minikube</code> deploys MLOps <code>stack</code> on top of minikube cluster on your machine. Please ensure that docker is installed and running on your machine, along with the latest version of minikube.</p>"},{"location":"code/local/minikube/#complete","title":"Complete","text":"Simple Deployment ConfigurationAdvanced Deployment Configuration <pre><code>name: local-minikube-k8s\nprovider:\n  name: local\ndeployment:\n  type: minikube\nstack:\n  - data_versioning:\n      name: lakefs\n  - experiment_tracking:\n      name: mlflow\n  - orchestrator:\n      name: prefect\n  - vector_database:\n      name: milvus\n</code></pre> <pre><code>name: local-minikube-k8s\nprovider:\n  name: local\ndeployment:\n  type: minikube\n  config:\n    kubernetes:\n      nodes: 3\nstack:\n  - data_versioning:\n      name: lakefs\n  - experiment_tracking:\n      name: mlflow\n  - orchestrator:\n      name: prefect\n  - vector_database:\n      name: milvus\n</code></pre> <ul> <li>Once the stacks have been deployed, there is one last step that allows the deployed stacks to be accessed on your local machine. You need to open a new terminal window and find the minikube profile that you're using <code>minikube profile list</code> and run <code>minikube tunnel --profile='&lt;minikube-profile&gt;'</code> to allow the services to be accessible on the local instance.</li> </ul>"},{"location":"user_guide/","title":"User Guide","text":""},{"location":"user_guide/#using-mlinfra","title":"Using mlinfra","text":"<p><code>mlinfra</code> is used as a cli which always takes <code>--stack-config-path</code> as an argument which is the path ofg the stack file that represents your MLOps stacks and deployment type. Following functions can be performed on a stack file:</p> <p>Cloud Credentials</p> <p><code>mlinfra</code> relies on cloud credentials to be configured prior to all these commands getting executed.</p> <ul> <li><code>estimate-cost</code>: This command generates a cost breakdown of the cloud components defined in the stack config file. To use this feature, <code>infracost</code> needs to be installed on your system. An example is as follows: <pre><code>mlinfra estimate-cost --stack-config-path=aws-lakefs-k8s.yaml\n</code></pre></li> <li><code>generate-terraform-config</code>: This command generates the <code>*.tf.json</code> configuration for the stack file and allows the user to inspect the params prior to getting deployed. An example is as follows: <pre><code>mlinfra generate-terraform-config --stack-config-path=aws-lakefs-k8s.yaml\n</code></pre></li> <li> <p><code>terraform</code>: This command is used in conjunction with another sub-command <code>--apply</code> which has the following values:</p> <ul> <li><code>plan</code>: used to plan the stack config</li> <li><code>apply</code>: used to apply the stack config</li> <li><code>destroy</code>: used to destroy / delete the stack config</li> </ul> </li> <li> <p>Examples of these commands are as follows: <pre><code># To plan the changes in a stack config\nmlinfra terraform --action=plan --stack-config-path=aws-lakefs-k8s.yaml\n\n# To apply the stack config components\nmlinfra terraform --action=apply --stack-config-path=aws-lakefs-k8s.yaml\n\n# To delete the stack config components\nmlinfra terraform --action=destroy --stack-config-path=aws-lakefs-k8s.yaml\n</code></pre></p> </li> </ul> <p>Info</p> <p>As the tool is under active development, more commands might be added to <code>mlinfra</code> based on users requests that might facilitate ease of operations.</p>"},{"location":"user_guide/#deploying-a-stack","title":"Deploying a Stack","text":"<ul> <li>A sample mlops stack for deployment on Cloud IaaS looks as follows:</li> </ul> Simple Deployment ConfigurationAdvanced Deployment Configuration This stack config deploys EC2 instances with config stacks<pre><code>name: aws-mlops-stack-complete\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\nstack:\n  - data_versioning:\n      name: lakefs\n  - experiment_tracking:\n      name: mlflow\n  - orchestrator:\n      name: prefect\n</code></pre> The same stack config can be configured to quite an extent<pre><code>name: aws-mlops-stack-complete-advanced\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: cloud_vm\n  config:\n    vpc:\n      create_database_subnets: true\nstack:\n  - data_versioning:\n      name: lakefs\n      params:\n        remote_tracking: true\n        database_type: \"dynamodb\"\n        lakefs_data_bucket_name: \"lakefs-repository-data-bucket\"\n        dynamodb_table_name: \"lakefs_kvstore\"\n  - experiment_tracking:\n      name: mlflow\n      params:\n        remote_tracking: true\n        mlflow_artifacts_bucket_name: \"artifacts-storage-bucket\"\n  - orchestrator:\n      name: prefect\n      params:\n        remote_tracking: true\n        ec2_application_port: 9500\n</code></pre> <ul> <li>Whereas sample mlops stack for deployment on Cloud PaaS looks as follows:</li> </ul> Simple Deployment ConfigurationAdvanced Deployment Configuration This stack config deploys an EKS cluster with LakeFS<pre><code>name: aws-lakefs-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\nstack:\n  - data_versioning:\n      name: lakefs\n</code></pre> The same stack config can be configured to quite an extent<pre><code>name: aws-lakefs-k8s\nprovider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\ndeployment:\n  type: kubernetes\n  config:\n    vpc:\n      create_database_subnets: true\n      enable_nat_gateway: true\n      one_nat_gateway_per_az: false\n    kubernetes:\n      k8s_version: \"1.30\"\n      cluster_endpoint_public_access: true\n      spot_instance: false\n      tags:\n        data_versioning: \"lakefs\"\n    node_groups:\n      - name: lakefs-node-group\n        instance_types:\n          - t3.medium\n        desired_size: 1\n        min_size: 1\n        max_size: 3\n        disk_size: 20\nstack:\n  - data_versioning:\n      name: lakefs\n      params:\n        remote_tracking: true\n        database_type: \"postgres\"\n        tags:\n          database_type: \"postgres\"\n          data_versioning: \"lakefs\"\n          remote_tracking: true\n</code></pre> <ul> <li> <p>Terraform plan from this configuration can be inspected using the <code>mlinfra</code> cli command: <pre><code>mlinfra terraform --action=plan --stack-config-path=aws-lakefs-k8s.yaml\n</code></pre></p> </li> <li> <p>The mlops stacks configuration can be deployed using the <code>mlinfra</code> cli command: <pre><code>mlinfra terraform --action=apply --stack-config-path=aws-lakefs-k8s.yaml\n</code></pre></p> </li> </ul>"},{"location":"user_guide/application_config/","title":"Application Config","text":""},{"location":"user_guide/application_config/#documentation-coming-soon","title":"Documentation coming soon!","text":""},{"location":"user_guide/cloud_config/","title":"Cloud Config","text":""},{"location":"user_guide/cloud_config/#documentation-coming-soon","title":"Documentation coming soon!","text":""},{"location":"user_guide/stack_config/","title":"Stack config","text":"<p>The config file is made with simplicity in mind. It is comprised of 4 distinct sections which allow both simplicity and maximum room for configurability of the underlying cloud infrastructure as well as the mlops stack tooling being deployed using <code>mlinfra</code>. The 4 different components are as follows:</p> <p> </p> A sample stack file configuration <p>Info</p> <p>Only the <code>name</code> is a <code>string</code> property in the stack file whereas <code>provider</code>, <code>deployment</code> and <code>stack</code> are all objects.</p>"},{"location":"user_guide/stack_config/#name","title":"name","text":"<ul> <li>The <code>name</code> denotes the name used to refer the stack. It is used internally to track the state of the the stack deployment.</li> <li>It is also used as the bucket_prefix of the terraform state bucket which is used to store the state for this stack.</li> </ul> <p>Info</p> <p>The <code>name</code> of the config must not exceed 37 characters otherwise an error would be thrown at the <code>mlinfra terraform --action=apply</code> time.</p>"},{"location":"user_guide/stack_config/#provider","title":"provider","text":"<ul> <li>The <code>provider</code> block determines where the deployment of the stack config is going to take place.</li> <li> <p>This block also configures cloud provider's information, such as in case of AWS, account id and region of deployment.</p> </li> <li> <p>For more details, see the provider page.</p> </li> </ul>"},{"location":"user_guide/stack_config/#deployment","title":"deployment","text":"<ul> <li>The <code>deployment</code> block configures the type of deployment (whether IaaS or PaaS) on the cloud provider and provides a space for adding any further configurations to the underlying cloud components.</li> <li>The <code>deployment.type</code> can be set to <code>cloud_vm</code> for IaaS or <code>kubernetes</code> for PaaS deployments.</li> <li> <p>The <code>deployment.config</code> can be used to further configure the cloud components; such as the <code>vpc</code> or <code>kubernetes</code> cluster for more user defined customisations.</p> </li> <li> <p>For more details, see the deployment page.</p> </li> </ul>"},{"location":"user_guide/stack_config/#stack","title":"stack","text":""},{"location":"user_guide/stack_config/deployment/","title":"Deployment","text":"<p>The deployment section is designed to enable configuration of the deployment type, either IaaS or PaaS, within your chosen cloud provider. This section is highly adaptable, requiring only one mandatory field: <code>type</code>. The <code>type</code> field accepts one of two values:</p> <ul> <li>IaaS: Specified as <code>cloud_vm</code>.</li> <li>PaaS: Specified as <code>kubernetes</code>.</li> </ul> <p>Additionally, the <code>config</code> subsection under <code>deployment</code> offers detailed, fine-grained configuration options for the respective cloud resources. These options vary based on the deployment type:</p> <p>For <code>cloud_vm</code>, the configuration is limited to <code>vpc</code>. For <code>kubernetes</code>, configurations extend to <code>vpc</code>, <code>kubernetes</code>, and <code>node_groups</code>.</p> <p>A sample <code>deployment</code> block can look as follows:</p> Simple Deployment ConfigurationAdvanced Deployment Configuration Minimal kubernetes type deployment<pre><code>deployment:\n  type: kubernetes\n</code></pre> Advanced kubernetes type deployment with user configured vpc and k8s cluster<pre><code>deployment:\n  type: kubernetes\n  config:\n    vpc:\n      create_database_subnets: true\n      enable_nat_gateway: true\n      one_nat_gateway_per_az: false\n    kubernetes:\n      k8s_version: \"1.30\"\n      cluster_endpoint_public_access: true\n      spot_instance: false\n      tags:\n        data_versioning: \"lakefs\"\n    node_groups:\n      - name: lakefs-node-group\n        instance_types:\n          - t3.medium\n        desired_size: 1\n        min_size: 1\n        max_size: 3\n        disk_size: 20\n</code></pre> <p>Further elaboration on these configurations can be found in the Cloud Config section.</p>"},{"location":"user_guide/stack_config/provider/","title":"Provider","text":"<p>The <code>provider</code> block is designed to configure the cloud provider for deploying the stack configuration. To facilitate user convenience in cross-cloud deployment, the <code>provider</code> logic has been distinctly separated from the <code>deployment</code> logic. This approach ensures that a user can deploy the same stack on a different cloud provider by simply modifying the provider section.</p>"},{"location":"user_guide/stack_config/provider/#aws","title":"AWS","text":"<p>A sample AWS <code>provider</code> config looks as follows: Sample Provider Configuration for AWS<pre><code>provider:\n  name: aws\n  account_id: \"793009824629\"\n  region: \"eu-central-1\"\n</code></pre> The following is the description of fields in provider:</p> <ul> <li><code>name</code>: name of the cloud provider</li> <li><code>account_id</code>: this refers to the account id of your AWS account</li> <li><code>region</code>: The region of deployment for AWS</li> </ul> <p>Warning</p> <p>All above fields of the cloud provider are mandatory and cannot be left blank.</p> <p>Info</p> <p>Currently only AWS is the supported provider. <code>provider</code> sections for different clouds would be updated as soon as there's a new provider available.</p>"},{"location":"user_guide/stack_config/stack/","title":"Stack","text":"<p>The <code>stack</code> within the stack file configuration refers to the MLOps stack intended for deployment. This <code>stack</code> consists of several layers, each aligning with different stages of the MLOps project lifecycle. Some key layers include:</p> <ul> <li><code>data_versioning</code>: For dataset version control.</li> <li><code>experiment_tracker</code>: To monitor project metadata.</li> <li><code>orchestrator</code>: To manage data processing, model training, and hyperparameter tuning tasks.</li> <li><code>model_registry</code>: For tracking and versioning models generated by the orchestrator.</li> </ul> <p>Each layer plays a pivotal role in the streamlined execution and management of MLOps processes.</p> <p>A sample <code>stack</code> block can look as follows:</p> Simple Deployment ConfigurationAdvanced Deployment Configuration Minimal kubernetes based stack for lakefs<pre><code>stack:\n  - data_versioning:\n      name: lakefs\n</code></pre> Advanced kubernetes based stack for lakefs with many layers of configuration<pre><code>stack:\n  - data_versioning:\n      name: lakefs\n      params:\n        remote_tracking: true\n        database_type: \"postgres\"\n        tags:\n          database_type: \"postgres\"\n          data_versioning: \"lakefs\"\n          remote_tracking: true\n</code></pre> <p><code>mlinfra</code> is designed to integrate a multitude of stacks, aiming to simplify the deployment process to a mere button click.</p> <p>Info</p> <p><code>mlinfra</code> is under active development and some of the stacks might not be available across all <code>providers</code> and/or <code>deployment</code>. Please keep an eye on the issue tracker and roadmap for more details.</p>"}]}